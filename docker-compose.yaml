version: '2'
services:

  postgres:
    image: postgres:13.1
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - APP_DB_USER=analytics
      - APP_DB_PASS=analytics
      - APP_DB_NAME=analytics
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:0.10.2.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: "questionCreated:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  sql-server-db:
    container_name: sqlserver
    image: mcr.microsoft.com/mssql/server:latest
    ports:
      - "1439:1433"
    environment:
      SA_PASSWORD: "password1234"
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
    volumes:
      - sqlvolume:/var/opt/mssql

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      - jaeger-example

  hotrod:
    image: jaegertracing/example-hotrod:latest
    ports: 
      - "8080:8080"
    command: ["all"]
    environment:
      - JAEGER_AGENT_HOST=jaeger
      # Note: if your application is using Node.js Jaeger Client, you need port 6832,
      #       unless issue https://github.com/jaegertracing/jaeger/issues/1596 is resolved.
      - JAEGER_AGENT_PORT=6831
    networks:
      - jaeger-example
    depends_on:
      - jaeger

networks:
  jaeger-example:

volumes:
  sqlvolume:
    driver: local
